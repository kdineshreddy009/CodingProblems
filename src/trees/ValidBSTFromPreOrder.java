package trees;

import java.util.ArrayList;

class TreeNode {
	int val;
	TreeNode left;
	TreeNode right;

	public TreeNode(int x) {
		this.val = x;
		this.left = null;
		this.right = null;
	}
}

public class ValidBSTFromPreOrder {
	static int index;
	ArrayList<Integer> res;

	public int solve(ArrayList<Integer> A) {
		index = 0;
		if (A.size() == 0 || A.size() == 1) {
			return 1;
		}
		TreeNode root = formBST(A, Integer.MIN_VALUE, Integer.MAX_VALUE);

		res = new ArrayList<Integer>();
		inOrder(root);
		System.out.println(res);

		for (int i = 1; i < res.size(); i++) {
			if (res.get(i - 1) < res.get(i))
				continue;
			else {
				return 0;
			}
		}
		return 1;
	}

	private void inOrder(TreeNode rt) {
		if (rt == null)
			return;
		inOrder(rt.left);
		res.add(rt.val);
		inOrder(rt.right);
	}

	private TreeNode formBST(ArrayList<Integer> al, int leftB, int rightB) {
		TreeNode root = new TreeNode(al.get(index));
		index = index + 1;

		if (index >= al.size()) {
			return root;
		}

		if (al.get(index) > leftB && al.get(index) < root.val) {
			root.left = formBST(al, leftB, root.val);
		}

		if (index >= al.size()) {
			return root;
		}

		if (al.get(index) > root.val && al.get(index) < rightB) {
			root.right = formBST(al, root.val, rightB);
		}
		System.out.println(root.val);
//		System.out.println(root.left);
//		System.out.println(root.right);
		return root;
	}

	public static void main(String[] args) {
		ValidBSTFromPreOrder t = new ValidBSTFromPreOrder();
		ArrayList<Integer> res = new ArrayList<Integer>();
		res.add(4);
		res.add(2);
		res.add(1);
		res.add(3);
		res.add(6);
		res.add(5);
		res.add(7);
//		t.solve(res);
		int[] arr = new int[] { 13, 784, 689, 301, 615, 310, 109, 670, 636, 190, 455, 591, 593, 892, 583, 422, 198, 565,
				150, 826, 111, 536, 517, 236, 414, 994, 778, 3, 572, 844, 784, 867, 133, 986, 599, 444, 367, 88, 882,
				968, 646, 308, 786, 202, 638, 926, 725, 232, 369, 454, 936, 623, 661, 504, 282, 519, 255, 222, 933, 710,
				311, 445, 323, 250, 713, 781, 384, 249, 841, 744, 523, 507, 9, 820, 749, 368, 781, 688, 405, 750, 517,
				927, 12, 958, 995, 911, 718, 26, 697, 234, 833, 213, 336, 498, 893, 718, 198, 913, 828, 662, 734, 873,
				149, 134, 286, 68, 963, 330, 451, 588, 284, 514, 240, 97, 247, 217, 862, 590, 36, 928, 672, 289, 126,
				68, 930, 782, 908, 355, 832, 853, 916, 10, 439, 841, 405, 832, 602, 278, 14, 592, 358, 304, 131, 622,
				604, 728, 275, 135, 263, 763, 708, 90, 757, 984, 237, 983, 913, 567, 960, 414, 827, 73, 3, 462, 758,
				403, 286, 885, 698, 312, 147, 862, 359, 943, 379, 635, 348, 245, 791, 600, 539, 561, 548, 174, 808, 842,
				176, 278, 708, 576, 392, 639, 700, 71, 580, 183, 967, 869, 755, 692, 495, 458, 531, 992, 16, 240, 828,
				526, 922, 654, 844, 868, 325, 88, 231, 44, 323, 489, 526, 630, 462, 912, 633, 130, 39, 263, 261, 670,
				191, 671, 183, 221, 861, 987, 201, 80, 510, 364, 303, 179, 792, 891, 988, 199, 984, 757, 22, 61, 977,
				890, 396, 513, 643, 120, 763, 839, 753, 19, 29, 797, 841, 358, 32, 498, 779, 878, 860, 9, 400, 206, 729,
				831, 668, 527, 13, 34, 811, 413, 120, 165, 126, 317, 690, 566, 834, 282, 199, 714, 931, 160, 456, 703,
				789, 118, 11, 561, 610, 307, 818, 375, 385, 252, 342, 965, 708, 408, 339, 267, 193, 418, 805, 506, 597,
				535, 943, 411, 907, 465, 92, 782, 496, 461, 640, 33, 364, 178, 652, 940, 518, 410, 752, 602, 61, 576,
				427, 581, 812, 66, 396, 379, 931, 579, 595, 261, 533, 631, 505, 894, 563, 803, 578, 168, 18, 465, 963,
				79, 606, 45, 259, 56, 901, 470, 631, 984, 544, 59, 304, 293, 99, 961, 642, 902, 718, 15, 298, 250, 784,
				870, 362, 334, 120, 903, 209, 157, 190, 839, 785, 475, 148, 961, 599, 258, 4, 789, 743, 64, 262, 765,
				94, 437, 599, 799, 359, 179, 413, 919, 550, 423, 238, 197, 29, 786, 545, 964, 308, 954, 69, 426, 302,
				174, 209, 70, 823, 2, 524, 134, 329, 285, 981, 571, 750, 223, 112, 752, 742, 195, 464, 359, 447, 120,
				487, 37, 665, 727, 821, 108, 828, 625, 338, 995, 382, 948, 317, 564, 10, 242, 299, 436, 618, 769, 614,
				54, 885, 656, 184, 945, 420, 9, 788, 78, 458, 198, 384, 124, 996, 723, 458, 174, 768, 947, 25, 928, 668,
				836, 699, 981, 403, 379, 554, 961, 348, 60, 341, 369, 352, 87, 793, 435, 611, 932, 761, 854, 855, 419,
				863, 156, 190, 442, 437, 14, 549, 642, 493, 734, 791, 826, 207, 370, 655, 612, 36, 674, 424, 897, 868,
				603, 215, 675, 563, 175, 469, 599, 166, 418, 872, 558, 958, 135, 378, 667, 51, 464, 193, 555, 318, 634,
				963, 429, 615, 903, 662, 892, 257, 430, 847, 194, 582, 477, 381, 858, 121, 511, 471, 64, 946, 83, 778,
				353, 321, 599, 106, 446, 433, 305, 343, 836 };
		System.out.println(arr.length);
	}
	
}
